##############################################################################
# Copyright (c) 2011 GK Software AG and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     Stephan Herrmann - initial API and implementation 
##############################################################################

### addition for /org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/messages.properties
### NULL ANNOTATIONS
880 = Type mismatch: returning null from a method declared as @{0}
881 = Type mismatch: return value can be null but method is declared as @{0}
882 = Potential type mismatch: insufficient nullness information regarding return value while the method is declared as @{0}
883 = Type mismatch: passing null to a parameter declared as @{0}
884 = Type mismatch: potentially passing null to a parameter declared as @{0}
885 = Potential type mismatch: insufficient nullness information regarding a value that is passed to a parameter declared as @{0}
886 = Type mismatch: assigning null to local variable {0}, which is declared as @{1}
887 = Type mismatch: potentially assigning null to local variable {0}, which is declared as @{1}
888 = Potential type mismatch: insufficient nullness information regarding a value that is assigned to local variable {0}, which is declared as @{1}
889 = Buildpath problem: the type {0} which is configured as a null annotation type cannot be resolved
890 = The return type is incompatible with the @{1} return from {0}
891 = Illegal redefinition of parameter {0}, inherited method from {1} declares this parameter as @{2}
892 = Illegal redefinition of parameter {0}, inherited method from {1} does not constrain this parameter
893 = Potential null pointer access: The method {0} may return null
894 = Redundant null check: The method {0} cannot return null
