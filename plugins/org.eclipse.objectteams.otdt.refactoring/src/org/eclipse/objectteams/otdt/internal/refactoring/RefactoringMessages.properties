ChangeSignatureAdaptor_callinBaseArgDeleteIncomplete_info=Deleting arguments at the base side of a callin binding is not fully supported. Please manually update transitive references.
ChangeSignatureAdaptor_callinRoleArgAddIncomplete_info=Adding arguments at the role side of a callin binding is not fully supported. Please manually update transitive references.
ChangeSignatureAdaptor_calloutBaseArgAddIncomplete_info=Adding arguments at the base side of a callout binding is not fully supported. Please manually update transitive references.
ChangeSignatureAdaptor_calloutRoleArgDeleteIncomplete_info=Deleting arguments at the role side of a callout binding is not fully supported. Please manually update transitive references.
ChangeSignatureAdaptor_cannotCreateParamMap_CTF_warning=Need to create parameter mapping, which however is not yet implemented for callout-to-field
ChangeSignatureAdaptor_cannotCreateParamMap_MultiCallin_warning=Need to create parameter mapping, which however is not yet implemented for callin to multiple bases
ChangeSignatureAdaptor_cannotUpdateParameterMapping_warning=Cannot update existing parameter mapping
ExtractInterfaceAdaptor_createAsRole_checkbox=Create as role of the enclosing team
ExtractInterfaceAdaptor_createInterface_changeName=Create interface {0}
MoveInstanceMethodAdaptor_ambiguousMethodSpec_error=Refactoring cannot be performed\! There would be an ambiguous method specifier in a method binding after moving\!
MoveInstanceMethodAdaptor_checkOverloading_progress=Checking Overloading
MoveInstanceMethodAdaptor_moveInstanceMethod_name=Move Instance Method
MoveInstanceMethodAdaptor_overloading_error=Moved method will be overloaded after refactoring\!
PullUpAdaptor_ambiguousMethodSpec_error=Refactoring cannot be performed\! There would be an ambiguous method specifier in a method binding after moving\!
PullUpAdaptor_callinMethodToNonRole_error=The callin method ''{0}'' can only be moved to a role (OTJLD \uFFFD4.2.(d)).
PullUpAdaptor_checkOverloading_progress=Checking Overloading
PullUpAdaptor_checkOverriding_progress=Checking Overriding
PullUpAdaptor_checkShadowing_progress=Checking Shadowing
PullUpAdaptor_fieldShadowing_error=The pulled up field ''{0}'' would be shadowed in ''{1}''.
PullUpAdaptor_overloading_error=The pulled up method ''{0}'' would be overloaded after refactoring.
PullUpAdaptor_overriding_error=The pulled up method ''{0}'' would be overridden in ''{1}''.
PullUpAdaptor_referencedByMethodBinding_error=Pulled up member ''{0}'' is referenced in an aspect binding by ''{1}''
PushDownAdaptor_ambiguousMethodSpec_error=Refactoring cannot be performed\! There would be an ambiguous method specifier in a method binding after moving\!
PushDownAdaptor_boundAsCallout_error=The pushed down method ''{0}'' is bound in a callout method binding in ''{1}''.
PushDownAdaptor_boundAsCTF_error=The pushed down method ''{0}'' is bound in a callout to field binding in ''{1}''.
PushDownAdaptor_boundInCallin_error=The pushed down method ''{0}'' is bound in a callin method binding in ''{1}'' and will not be visible after refactoring.
PushDownAdaptor_checkShadowing_progress=Checking Shadowing
PushDownAdaptor_overloading_error=The pushed down method ''{0}'' would be overloaded after refactoring.
PushDownAdaptor_overloading_progress=Checking Overloading
PushDownAdaptor_overriding_progress=Checking Overriding
PushDownAdaptor_overridingImplicitlyInherited_error=The pushed down method ''{0}'' would override the implicitly inherited method ''{1}''.
PushDownAdaptor_phantomRoleConflict_error=An implicit sub role of ''{0}'' is a phantom role, therefore the pushed down members cannot be moved to ''{1}''.
PushDownAdaptor_referencedByCallin_error=The pushed down method ''{0}'' is referenced in a callin method binding in ''{1}'' and will not be visible after refactoring.
PushDownAdaptor_referencedByCallout_error=The pushed down method ''{0}'' is referenced in a callout method binding in ''{1}'' and will not be visible after refactoring.
PushDownAdaptor_referencedByCalloutParamMap_error=The pushed down member ''{0}'' is referenced in a callout parameter mapping in ''{1}'' and will not be visible after refactoring.
PushDownAdaptor_referencedByCTF_error=The pushed down field ''{0}'' is referenced in a callout to field binding in ''{1}'' and will not be visible after refactoring.
PushDownAdaptor_referencedByCTFParamMap_error=The pushed down member ''{0}'' is referenced in a callout to field value mapping in ''{1}'' and will not be visible after refactoring.
PushDownAdaptor_referencedByMethod_error=Pushed down member ''{0}'' is referenced by ''{1}''.
PushDownAdaptor_referencedInCallinParamMap_error=The pushed down member ''{0}'' is referenced in a callin parameter mapping in ''{1}'' and will not be visible after refactoring.
PushDownAdaptor_shadowing_error=The pushed down field ''{0}'' would be shadowed in ''{1}''.
RenameMethodAmbuguityMsgCreator_ambiguousMethodSpec_error=Refactoring cannot be performed\! There would be an ambiguous method specifier in a method binding after renaming\!
RenameMethodOverloadingMsgCreator_overloading_error=Renamed method will be overloaded after refactoring\!
RenameTypeAdaptor_addType_editName=Add Type
RenameTypeAdaptor_changeImplicitTypes_progress=Create changes for implicit type declarations
RenameTypeAdaptor_newTypeConflic_error=New type ''{0}'' conflicts with the existing type ''{1}''.
RenameTypeAdaptor_overridden_error=The renamed role type would be overridden by role type ''{0}''.
RenameTypeAdaptor_overriding_error=The renamed role type would override the inherited role type ''{0}''.
RenameTypeAdaptor_overriding_progress=Check Overriding
RenameTypeAdaptor_predefinedRoleName_error=''{0}'' is a predefined role type and cannot be overridden
RenameTypeAdaptor_roleShadowing_error=A role type named ''{0}'' exists in ''{1}'' and would shadow the renamed type (OTJLD §1.4(a)).
RenameTypeAdaptor_shadowedByRole_error=The role type ''{0}'' would shadow the renamed type (OTJLD §1.4(a)).
RenameTypeAdaptor_shadowExistingType_error=The renamed role type would shadow the visible type ''{0}'' (OTJLD §1.4(a)).
RenameTypeAdaptor_teamCollidesWithPackage_error=The new team name ''{0}'' collides with the package ''{1}'', therefore a renaming of the role directory ''{2}'' is impossible.
